<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="stringSecondOperand.Size" type="System.Drawing.Size, System.Drawing">
    <value>432, 20</value>
  </data>
  <data name="stringResult.Size" type="System.Drawing.Size, System.Drawing">
    <value>834, 20</value>
  </data>
  <data name="stringDelTextbox.Location" type="System.Drawing.Point, System.Drawing">
    <value>665, 233</value>
  </data>
  <data name="stringDelTextbox.Size" type="System.Drawing.Size, System.Drawing">
    <value>186, 20</value>
  </data>
  <data name="AddTo1Button.Location" type="System.Drawing.Point, System.Drawing">
    <value>535, 53</value>
  </data>
  <data name="AddTo1Button.Size" type="System.Drawing.Size, System.Drawing">
    <value>124, 23</value>
  </data>
  <data name="AddTo1Button.Text" xml:space="preserve">
    <value>Добавить в первое</value>
  </data>
  <data name="DelButton.Location" type="System.Drawing.Point, System.Drawing">
    <value>584, 231</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="InvertRadioButton.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="InvertRadioButton.Size" type="System.Drawing.Size, System.Drawing">
    <value>103, 17</value>
  </data>
  <data name="InvertRadioButton.Text" xml:space="preserve">
    <value>Инвертировать</value>
  </data>
  <data name="UniteRadioButton.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="UniteRadioButton.Size" type="System.Drawing.Size, System.Drawing">
    <value>87, 17</value>
  </data>
  <data name="UniteRadioButton.Text" xml:space="preserve">
    <value>Объединить</value>
  </data>
  <data name="CrossRadioButton.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="CrossRadioButton.Size" type="System.Drawing.Size, System.Drawing">
    <value>74, 17</value>
  </data>
  <data name="CrossRadioButton.Text" xml:space="preserve">
    <value>Пересечь</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYA1PD/ALHi/wCO1P8Aa8b/AEi4
        /wAlqv8AAKr/AACS3AAAerkAAGKWAABKcwAAMlAA1OP/ALHH/wCOq/8Aa4//AEhz/wAlV/8AAFX/AABJ
        3AAAPbkAADGWAAAlcwAAGVAA1NT/ALGx/wCOjv8Aa2v/AEhI/wAlJf8AAAD+AAAA3AAAALkAAACWAAAA
        cwAAAFAA49T/AMex/wCrjv8Aj2v/AHNI/wBXJf8AVQD/AEkA3AA9ALkAMQCWACUAcwAZAFAA8NT/AOKx
        /wDUjv8Axmv/ALhI/wCqJf8AqgD/AJIA3AB6ALkAYgCWAEoAcwAyAFAA/9T/AP+x/wD/jv8A/2v/AP9I
        /wD/Jf8A/gD+ANwA3AC5ALkAlgCWAHMAcwBQAFAA/9TwAP+x4gD/jtQA/2vGAP9IuAD/JaoA/wCqANwA
        kgC5AHoAlgBiAHMASgBQADIA/9TjAP+xxwD/jqsA/2uPAP9IcwD/JVcA/wBVANwASQC5AD0AlgAxAHMA
        JQBQABkA/9TUAP+xsQD/jo4A/2trAP9ISAD/JSUA/gAAANwAAAC5AAAAlgAAAHMAAABQAAAA/+PUAP/H
        sQD/q44A/49rAP9zSAD/VyUA/1UAANxJAAC5PQAAljEAAHMlAABQGQAA//DUAP/isQD/1I4A/8ZrAP+4
        SAD/qiUA/6oAANySAAC5egAAlmIAAHNKAABQMgAA///UAP//sQD//44A//9rAP//SAD//yUA/v4AANzc
        AAC5uQAAlpYAAHNzAABQUAAA8P/UAOL/sQDU/44Axv9rALj/SACq/yUAqv8AAJLcAAB6uQAAYpYAAEpz
        AAAyUAAA4//UAMf/sQCr/44Aj/9rAHP/SABX/yUAVf8AAEncAAA9uQAAMZYAACVzAAAZUAAA1P/UALH/
        sQCO/44Aa/9rAEj/SAAl/yUAAP4AAADcAAAAuQAAAJYAAABzAAAAUAAA1P/jALH/xwCO/6sAa/+PAEj/
        cwAl/1cAAP9VAADcSQAAuT0AAJYxAABzJQAAUBkA1P/wALH/4gCO/9QAa//GAEj/uAAl/6oAAP+qAADc
        kgAAuXoAAJZiAABzSgAAUDIA1P//ALH//wCO//8Aa///AEj//wAl//8AAP7+AADc3AAAubkAAJaWAABz
        cwAAUFAA8vLyAObm5gDa2toAzs7OAMLCwgC2trYAqqqqAJ6engCSkpIAhoaGAHp6egBubm4AYmJiAFZW
        VgBKSkoAPj4+ADIyMgAmJiYAGhoaAA4ODgDw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAA8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD1AAAAAO0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAADvAAAA8QAAAAAAAPX1AAAAAPX1AAAAAAAAAAAAAAAAAPUAAAD1AAD09PT08+7z8/Pz9fX0
        9PT08+70AAAAAAAAAO0AAAAA9fT09PTv9+3z8/Pz8/P09PTt9+8AAAAAAAAA8QAAAPT08/Pz8+7l7fPz
        8/Pz8/Pz8+zl7vUAAAAAAADzACAtAPT08vHz9O7z8/Ly8vLz8vLz8+709PP0AAAAAPQAICoqKjktLS0t
        9fTy8vLy8vL09PT09PQALS0hITktLQAgKikpKSkpKSoqKioqKioqKioqKioqKiorAQEsIS0rKiAqKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSoqASwtKykqLCopKSkpKSkdKSkpKSkpKSkpKSkpKikpKSorLCspKSks
        KikpJycpERIpKSkpKSkpKSkpKSrdKSkpKiwrKSkpKSoBKScnJynd3SopKSkpKSkpKSkpHt0dKSkqKykp
        KScnKSwqJycpEd3dEiknJykpKSkpKSkR290qKSsqKSknJycnKispJynd29veKicnJykpKSkpHt3a2xEp
        KikpKScpJSkpKyonKd3a290SKScnJykpKSkR29raESopKikpKewAACcpKyop3dra3d0SKScnJykpHt3a
        2trdKiorKiknAAAAAOspLCwR3dra2t0SKicnKSoQ2tra290rLCwqJwAAAAAAAAAsLCHe3dva2t0SKikq
        Et3a2t0SLCwBKjbn6gAAAAAAAOkBKiwsE93a2t0SKhLa2t0RISwBKy0sLCzwAAAhIe7o6C0hAQEBOS0h
        EREREREhIS0BLS0sAQErOAAAAAAhKyoqKgEBASwhIS0tLS0tLS0hIQEBKyoqKyEAAAAAAADoLCwBAS0t
        LS0sISsqAR8hLS0tLCwsOS05OCAgAAAAAADqICwsLCsqASAZHiYqHhosASoqKioqKioBLOkAAAAA6yEs
        KyorAR8ZbnNnHh5mclwaICwsLCws7esAAAAAAAAAAOjs7OztGRhvbmYZGG9uZhgYGusAAAAAAAAAAAAA
        AAAAAAAAAAAaGOpt7RgYbW34GBkaAAAAAAAAAAAAAAAAAAAAAAAAAOgZGBgXFxcYGBgZGegAAAAAAAAA
        AAAAAAAAAAAAAAAAAOgZGRcLCxgYGRnoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsGRkZGezsAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOAAAAPAAAABwAAAAcAAAADAAAAAwAAAAIAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADAAAAB4AAAA/gAAAH4AAABgAAAA8AAAAfgAAAB8AAAAeAAAAf4AAD//8AB///A
        Af//4AP///gP////////////
</value>
  </data>
</root>